export declare class Web3VmProvider {
    web3: any;
    vm: any;
    vmTraces: any;
    txs: any;
    txsReceipt: any;
    processingHash: any;
    processingAddress: any;
    processingIndex: any;
    previousDepth: any;
    incr: any;
    eth: any;
    debug: any;
    providers: any;
    currentProvider: any;
    storageCache: any;
    lastProcessedStorageTxHash: any;
    sha3Preimages: any;
    sha3: any;
    toHex: any;
    toAscii: any;
    fromAscii: any;
    fromDecimal: any;
    fromWei: any;
    toWei: any;
    toBigNumber: any;
    isAddress: any;
    utils: any;
    txsMapBlock: any;
    blocks: any;
    latestBlockNumber: any;
    constructor();
    setVM(vm: any): void;
    releaseCurrentHash(): any;
    txWillProcess(data: any): Promise<void>;
    txProcessed(data: any): Promise<void>;
    pushTrace(data: any): Promise<void>;
    getCode(address: any, cb: any): void;
    setProvider(provider: any): void;
    traceTransaction(txHash: any, options: any, cb: any): any;
    storageRangeAt(blockNumber: any, txIndex: any, address: any, start: any, maxLength: any, cb: any): any;
    getBlockNumber(cb: any): void;
    getTransaction(txHash: any, cb: any): any;
    getTransactionReceipt(txHash: any, cb: any): any;
    getTransactionFromBlock(blockNumber: any, txIndex: any, cb: any): void;
    preimage(hashedKey: any, cb: any): void;
    getSha3Input(stack: any, memory: any): any;
    emptyFill(size: any): string;
}
